#version: '3.8'
services:

    #PHP Service
    app:
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel-app
        container_name: app
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: app
            SERVICE_TAGS: dev
        working_dir: /var/www
        depends_on:
            - db
        volumes:
            - ./:/var/www
            - ./php/local.ini:/usr/local/etc/php/conf.d/local.ini
        networks:
            - app-network

    #Nginx Service
    webserver:
        image: nginx:alpine
        container_name: webserver
        restart: unless-stopped
        tty: true
        ports:
            - "8081:80"
            - "8443:443"
        volumes:
            - ./:/var/www
            - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - app
        networks:
            - app-network

    #MySQL Service
    db:
        image: mysql:8
        container_name: db
        restart: unless-stopped
        tty: true
        ports:
            - "4309:3306"
        environment:
            MYSQL_DATABASE: ${DB_DATABASE}
            MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
            MYSQL_USER: ${DB_USERNAME}
            MYSQL_PASSWORD: ${DB_PASSWORD}
            SERVICE_TAGS: dev
            SERVICE_NAME: mysql
        volumes:
            - dbdata:/var/lib/mysql/
            - ./mysql/my.cnf:/etc/mysql/my.cnf
        networks:
            - app-network

    #NPM Watcher Service
    npm-watcher:
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel-app
        container_name: npm-watcher
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        command: npm run dev
        volumes:
            - ./:/var/www
        networks:
            - app-network

    #Laravel Scheduler Service
    scheduler:
        build:
            context: .
            dockerfile: Dockerfile
        image: laravel-app
        container_name: scheduler
        restart: unless-stopped
        tty: true
        working_dir: /var/www
        command: php artisan schedule:work
        volumes:
            - ./:/var/www
        networks:
            - app-network

#Docker Networks
networks:
    app-network:
        driver: bridge
#Volumes
volumes:
    dbdata:
        driver: local

